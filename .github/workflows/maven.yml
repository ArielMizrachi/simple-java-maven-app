name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  version:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Get current version
      id: get_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) #get the version
        echo "Current version: $VERSION"
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION" #seperate it into 3 parts
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH" #add the new version
        echo "New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT #expose it to other parts in the pipeline

    - name: Update pom.xml version
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.new_version }} -DgenerateBackupPoms=false  
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # update the patch in the repo, but you will need to pull each and every time 
    # - name: Commit version bump 
    #   run: |
    #     git config user.name "GitHub Actions"
    #     git config user.email "actions@github.com"
    #     git add pom.xml
    #     git commit -m "Bump patch version to ${{ steps.get_version.outputs.new_version }}"
    #     git push

  docker:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: arielmizrachi/maven-app:latest
          
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KEY_FILE }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy app on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@44.203.181.161 << 'EOF'
          docker pull arielmizrachi/maven-app:latest &&
          docker stop wmaven-app || true &&
          docker rm maven-app || true &&
          docker run -d --name maven-app -p 80:8000 arielmizrachi/maven-app:latest
          EOF

    
